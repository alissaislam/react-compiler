DoubleQuote=1
SingleQuote=2
Break=3
Do=4
Instanceof=5
Typeof=6
Case=7
Else=8
New=9
Var=10
Catch=11
Finally=12
Return=13
Void=14
Continue=15
For=16
Switch=17
While=18
Debugger=19
Function_=20
This=21
With=22
Default=23
If=24
Throw=25
Delete=26
In=27
Try=28
As=29
From=30
Class=31
Enum=32
Extends=33
Super=34
Const=35
Export=36
Import=37
Async=38
Await=39
IgSemiColon=40
OpenBracket=41
CloseBracket=42
OpenParen=43
CloseParen=44
OpenBrace=45
CloseBrace=46
SemiColon=47
Comma=48
Assign=49
QuestionMark=50
Colon=51
Ellipsis=52
Dot=53
PlusPlus=54
MinusMinus=55
Plus=56
Minus=57
BitNot=58
Not=59
Multiply=60
Divide=61
Modulus=62
Power=63
NullCoalesce=64
Hashtag=65
RightShiftArithmetic=66
LeftShiftArithmetic=67
RightShiftLogical=68
LessThan=69
MoreThan=70
LessThanEquals=71
GreaterThanEquals=72
Equals_=73
NotEquals=74
IdentityEquals=75
IdentityNotEquals=76
BitAnd=77
BitXOr=78
BitOr=79
And=80
Or=81
MultiplyAssign=82
DivideAssign=83
ModulusAssign=84
PlusAssign=85
MinusAssign=86
LeftShiftArithmeticAssign=87
RightShiftArithmeticAssign=88
RightShiftLogicalAssign=89
BitAndAssign=90
BitXorAssign=91
BitOrAssign=92
PowerAssign=93
ARROW=94
NullLiteral=95
BooleanLiteral=96
Implements=97
Let=98
Private=99
Public=100
Interface=101
Package=102
Protected=103
Static=104
Yield=105
JSX_TAG=106
WS=107
NEWLINE=108
SINGLE_LINE_COMMENT=109
MULTI_LINE_COMMENT=110
NUMBER=111
String=112
StringDQ=113
IDENTIFIER=114
CLOSE_TAG=115
Self_CLOSE_TAG=116
MoreThanIn=117
LessThanIn=118
JSX_TAGIn=119
WS_INSIDE=120
NewIn=121
StringIn=122
CloseBraceIn=123
OpenBraceIn=124
IDENTIFIERIn=125
AssignIn=126
CommaIn=127
OpenParenIn=128
CloseParenIn=129
ARROWIn=130
DotIn=131
MultiplyIn=132
DivideIn=133
PlusIn=134
MinusIn=135
NUMBERIn=136
BooleanLiteralIn=137
CLOSE_TAGIn=138
MoreThanInIn=139
JSX_TAGInIn=140
WS_INSIDEIN=141
NewInIN=142
OpenBraceInIn=143
LETTERR=144
Id=145
JSX_TAGModeCall=146
CloseBraceCall=147
NullLiteralModeCall=148
StringModeCall=149
CloseBraceModeCall=150
OpenBraceModeCall=151
AssignModeCall=152
CommaModeCall=153
OpenParenModeCall=154
CloseParenModeCall=155
ARROWModeCall=156
DotModeCall=157
MultiplyModeCall=158
DivideModeCall=159
PlusModeCall=160
MinusModeCall=161
NUMBERModeCall=162
BooleanLiteralModeCall=163
MoreThanModeCall=164
LessThanModeCall=165
QuestionMarkModeCall=166
ColonModeCall=167
ReturnModeCall=168
IgSemiColonModeCall=169
SemiColonModeCall=170
WS_INSIDECall=171
NewInCall=172
'"'=1
'\''=2
'break'=3
'do'=4
'instanceof'=5
'typeof'=6
'case'=7
'else'=8
'new'=9
'var'=10
'catch'=11
'finally'=12
'return'=13
'void'=14
'continue'=15
'for'=16
'switch'=17
'while'=18
'debugger'=19
'function'=20
'this'=21
'with'=22
'default'=23
'if'=24
'throw'=25
'delete'=26
'in'=27
'try'=28
'as'=29
'from'=30
'class'=31
'enum'=32
'extends'=33
'super'=34
'const'=35
'export'=36
'import'=37
'async'=38
'await'=39
';;'=40
'['=41
']'=42
'('=43
')'=44
'{'=45
'}'=46
';'=47
','=48
'='=49
'...'=52
'++'=54
'--'=55
'+'=56
'-'=57
'~'=58
'!'=59
'*'=60
'/'=61
'%'=62
'**'=63
'??'=64
'#'=65
'>>'=66
'<<'=67
'>>>'=68
'<='=71
'>='=72
'=='=73
'!='=74
'==='=75
'!=='=76
'&'=77
'^'=78
'|'=79
'&&'=80
'||'=81
'*='=82
'/='=83
'%='=84
'+='=85
'-='=86
'<<='=87
'>>='=88
'>>>='=89
'&='=90
'^='=91
'|='=92
'**='=93
'=>'=94
'null'=95
'implements'=97
'let'=98
'private'=99
'public'=100
'interface'=101
'package'=102
'protected'=103
'static'=104
'yield'=105
'/>'=116
'?'=166
':'=167
